create project

    npx create-react-app <projectName> --template typescript
	
	npx create-react-app <projectName> --template jsx

extension

    .tsx => The file will contain a React Component or any kind of JSX

    .ts => No JSX


run the app

    npm run start
	
	
Code from template:
	
	index.tsx
		
		import React from 'react';
		import ReactDOM from 'react-dom/client';
		import './index.css';
		import App from './App';
		import reportWebVitals from './reportWebVitals';

		const root = ReactDOM.createRoot(
		  document.getElementById('root') as HTMLElement
		);
		root.render(
		  <React.StrictMode>
			<App />
		  </React.StrictMode>
		);

		// If you want to start measuring performance in your app, pass a function
		// to log results (for example: reportWebVitals(console.log))
		// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
		reportWebVitals();

	App.tsx
	
		import React from 'react';
		import logo from './logo.svg';
		import './App.css';

		function App() {
		  return (
			<div className="App">
			  <header className="App-header">
				<img src={logo} className="App-logo" alt="logo" />
				<p>
				  Edit <code>src/App.tsx</code> and save to reload.
				</p>
				<a
				  className="App-link"
				  href="https://reactjs.org"
				  target="_blank"
				  rel="noopener noreferrer"
				>
				  Learn React
				</a>
			  </header>
			</div>
		  );
		}

		export default App;
		
Recommendation for React 18

	// 1) Import ReactDOM library
	import ReactDOM from "react-dom/client";
	 
	// 2) Get a reference to the div with ID root
	const el = document.getElementById("root");
	 
	// 3) Tell React to take control of that element
	const root = ReactDOM.createRoot(el!);
	 
	// 4) Create a component
	const App = () => {
	  return (
		<div>
		  <h1>Hi there!</h1>
		</div>
	  );
	};
	 
	// 5) Show the component on the screen
	root.render(<App />);
	
Important - Due to a bug in the DefinitelyTyped ReactDOM definitions, you need to add the ! operator here:

	const root = ReactDOM.createRoot(el!);


Initial snippet index.tsx

	import ReactDOM from "react-dom/client";
	 
	const el = document.getElementById("root");
	 
	const root = ReactDOM.createRoot(el!);
	 
	const App = () => {
	  return (
		<div>
		  <h1>Hi there!</h1>
		</div>
	  );
	};
	 

	root.render(<App />);


Final version of my preference

	1. Delete of files from src folder
	2. Create a new index.tsx file.
	
	import React from 'react';
	import ReactDOM from "react-dom/client";
		 
	const root = ReactDOM.createRoot(document.getElementById("root") as HTMLElement);
	 
	const App = () => {
	  return (
		<div>
		  <h1>Hi there!</h1>
		</div>
	  );
	};
	 
	root.render(
		<React.StrictMode>
			<App />
		</React.StrictMode>
	);



