Expense Tracker App Project
	
	LoadingScreen
	
		Do not use App OnStart Property to define global variables. Use OnVisible property in the first screen of your app.
		Use a global variable to control when the app is loading and use in conjuction with a timer component.

			Set(gblAppLoaded, false);
			...
			...
			...
			Set(gblAppLoaded, true);
		
		Timer
		
			Auto start -> On
		
			Duration -> 500 milliseconds
			
			Repeat Property -> !gblAppLoaded
				
			OnTimerEnd -> If(gblAppLoaded, Navigate('Home Screen'));
			
			Visible -> false
			
			
			
		On a label
			
			Fit perfectly in bottom left corner: 
			
				Y -> Parent.Height - Self.Height
				
		In a gallery you can use a table
		
			Items -> 
				
				Table(
					{
						Title: "Trip",
						Action: "",
						Image: travel
					},
					{
						Title: "Internet",
						Action: "",
						Image: internet
					},
					{
						Title: "Lunch",
						Action: "",
						Image: lunch
					}
				)
				
	Expense Screen
		
		Get items from sharepoint list inside the dropdown
		
			Choices([@'Expenses List'].Category)
			
		Patch using People field and With
			
			With(
				{
					varManager: Office365Users.ManagerV2(User().Email)
				},
				Patch(
					'Expenses List',
					Defaults('Expenses List'), 
					{
						Description: txtDescriptionExpense.Text,
						Date: dteDateExpense.SelectedDate,
						Category: drpCategoryExpense.Selected,
						Currency: drpCurrencyExpense.Selected,
						Person: {
							Claims: "i:0#.f|membership|" & User().Email,
							Department: "",
							DisplayName: User().FullName,
							Email: User().Email,
							JobTitle: "",
							Picture: ""
						},
						Manager: {
							Claims: "i:0#.f|membership|" & varManager.userPrincipalName,
							Department: "",
							DisplayName: varManager.displayName,
							Email: varManager.mail,
							JobTitle: "",
							Picture: ""
						},
						Total: Value(txtTotalExpense.Text)
					}
				)
			);
			
		Filtering
					
			Filter(
				'Expenses List',
				Person.Email = User().Email
			)
			
		DateTimeFormat
			
			Text(ThisItem.Date, DateTimeFormat.ShortDate)



		Grouping
			
			AddColumns(
				GroupBy(
					AddColumns(
						'Expenses List',
						Month,
						Text(Date, "mmmm")
					),
					Month, MonthGrouped
				),
				Total,
				Sum(ThisRecord.MonthGrouped, Total)
			)