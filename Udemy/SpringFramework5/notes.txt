mvn spring-boot:run 

http://localhost:8080/product/new
http://localhost:8080/product/list

https://springframework.guru/docker-cheat-sheet-for-spring-devlopers/

docker stop 1d8e834f3ac6
docker ps
docker run -p 27017:27017 -d mongo
docker logs -f 1d8e834f3ac6

persistence mongo

	1. docker run -p 27017:27017 -v /c/Users/ossa/dockerdata/mongo:/data/db -d mongo (did not work)
	
	2.
		- docker volume create --name=mongodata
		- docker run --name mongodb -v mongodata:/data/db -d -p 27017:27017 mongo
		- save data and stop the container
		- check commands for volumes:
		
			docker volume create	Create a volume
			docker volume inspect	Display detailed information on one or more volumes
			docker volume ls		List volumes
			docker volume prune		Remove all unused local volumes
			docker volume rm		Remove one or more volumes
		
		- restart the container and check if data is still there: 
		
			docker run --name mongodb -v mongodata:/data/db -d -p 27017:27017 mongo
		
			(error)
			C:\Program Files\Docker\Docker\Resources\bin\docker.exe: Error response from daemon: Conflict. 
			The container name "/mongodb" is already in use by container cd97d600435e9431c7bb9844401411634fdff6b9b3341c0b4d70f55827322555. 
			You have to remove (or rename) that container to be able to reuse that name..
			See 'C:\Program Files\Docker\Docker\Resources\bin\docker.exe run --help'.

			docker start container_id (volume already mapped)

rabbitmq

	docker run -d --hostname my-rabbit --name some-rabbit -p 8080:15672 -p 5671:5671 -p 5672:5672 rabbitmq:3-management

mysql

	- docker volume create --name=sqldata
	
	- docker run --name some-mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -v sqldata:/data/db -d -p 3306:3306 mysql 
	
housekeeping

	Removing All Unused Objects
		
		The docker system prune command will remove all stopped containers, all dangling images, and all unused networks:

			docker system prune
	
	containers
		
		docker kill $(docker ps -q)
		docker rm $(docker ps -a -q)

	images
	
		docker rmi <image name>
		docker rmi $(docker images -q)
		
		
	volumes
	
		docker volume rm 4e12af8913af888ba67243dec78419bf18adddc3c7a4b2345754b6db64293163
		docker volume prune
		
-----------------------------------------------------------------------

mysql
	
	docker run --name ozz-mysql -e MYSQL_ROOT_PASSWORD=password -d mysql
	docker exec -it ozz-mysql bash
		root@12720c074807:/# mysql --user=root -p
		
		
	
		