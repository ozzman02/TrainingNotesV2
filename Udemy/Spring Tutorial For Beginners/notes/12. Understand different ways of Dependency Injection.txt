12. Understand different ways of Dependency Injection

1. You can use Reflection (@Autowired against a variable)
2. Constructor injection
3. Setter injection



@Configuration
@ComponentScan(basePackages = "com.in28minutes.example.spring.business.examples")
class JavaTestContext {

}

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(classes = JavaTestContext.class)
public class DependencyInjectionExamples {
	private HiService service;
	
	@Test
	public void dummyTest() {
		assertEquals("Good Morning", service.sayHi());
	}
	
	// Setter injection
	@Autowired
	public void setService(HiService service) {
		System.out.println("HiService Setter");
		this.service = service;
	} 
}

@Component
class GoodMorningServiceImpl implements HiService {
	public String sayHi() {
		return "Good Morning"
	}
}

public interface HiService {
	public String sayHi();
}