Docker for Java Developers

/* run an image in the background with port mapping */
docker run -p 27017:27017 -d mongo

/* view container logs */
docker logs -f containerId

/* SpringBoot Mongo DB project */

	url: localhost:8080/product/list
	connect to container: docker exec -it 1bfd0b48c0fe bash
	



/* local volume for db persistence */
docker run -p 27017:27017 -v C:\Users\oscar.santamaria\dockerdata\mongo:\data\db -d mongo

/* run rabbitmq with port mapping exposing also the management console */ 
docker run -d --hostname guru-rabbit --name some-rabbit -p 8080:15672 -p 5671:5671 -p 5672:5672 rabbitmq:3-management

/* run mysql with port mapping, environment variables and local storage */
docker run --name guru-mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -v C:\Users\oscar.santamaria\dockerdata\mysql:\var\lib\mysql -p 3306:3306 -d mysql

Run Centos image on docker
	
	docker run -d centos
	
	docker run -d centos tail -f /dev/null
	
	docker exec -it 557cc951b694 bash
	
	in the terminal:
	
		yum install java
		
Run Spring Boot app in docker
	
	1. Crear docker file.
	2. docker build -t spring-boot-docker .
	3. docker run -d -p 8080:8080 spring-boot-docker
	
	
Automatig Building of Docker images (Fabric8)

	- mvn clean package
	
	- mvn clean package docker:build (build docker image)
	
	- mvn clean package docker:build push (publish to docker hub)
	
Running images from Maven

	mvn docker:run 		run interactively
	mvn docker:start	run in the background
	mvn docjer:stop

	
	