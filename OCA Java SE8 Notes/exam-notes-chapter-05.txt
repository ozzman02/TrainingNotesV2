Flow Control

	5.1 The if, if-else, and ternary constructs
	
		5.1.1 The if construct and its flavors
			
			- if
			- if-else
			- if-else-if-else
			
		5.1.2 Missing else blocks
		
			It’s acceptable to define one course of action for an if construct as follows:
			
				boolean testValue = false;
				if (testValue == true)
					System.out.println("value is true");
					
			But you can’t define the else part for an if construct, skipping the if code block
			
				boolean testValue = false;
				if (testValue == true)
				else
					System.out.println("value is false");
					
			But an empty code block that follows if works well:
			
				boolean testValue = false;
				if (testValue == true) {}
				else
					System.out.println("value is false");
					
			Here’s another interesting and bizarre piece of code:
			
				int score = 100;
				if((score=score+10) > 110);
				
			Using if(testValue==true) is the same as using if(testValue). Similarly,
			if(testValue==false) is the same as using if(!testValue).
				
		5.1.3 Implications of the presence and absence of {} in if-else constructs
		
			The braces are optional if there’s only one line in the if statement.
			
		5.1.4 Appropriate versus inappropriate expressions passed as arguments to an if statement
		
			