Java Basics

1.1 The structures of a Java class and a source code file

	Structure of a Java class
	
		Package statement
		Import statement
		Comments
		Class declaration {
			Variables
			Comments
			Constructors
			Methods
			Nested classes
			Nested interfaces
			Enum
		}

		Class declaration: The declaration of a class consist of the following parts:
		
			- Access Modifiers
			- Nonaccess Modifiers
			- Class name (mandatory)
			- Name of the base class (mandatory), if the class is extending another class
			- All implemented interfaces, if the class is implementing any interfaces
			- Class body (class fields, methods, constructors), included within a pair of curly braces, {} (mandatory)
			
	Structure and components of a Java source code file
	
		- A Java source code file is used to define Java entities such as a class, interface, enum, and annotation.
		- When you define a public class or an interface in a Java source file, the names of the class or interface and Java source file must match. 
		- Also, a source code file can’t define more than one public class or interface.
		
1.2 Executable Java applications

	An executable Java class, when handed over to the JVM, starts its execution at a particular point in the class—the main method. 
	The JVM starts executing the code that’s defined in the main method.
	
	You can’t hand over a non-executable Java class (class without a main method) to the JVM and ask it to execute it. In this case, the JVM
	won’t know which method to execute because no entry point is marked.
	
	The main method
	
		- The method must be marked as a public method.
		- The method must be marked as a static method.
		- The name of the method must be main.
		- The return type of this method must be void.
		- The method must accept a method argument of a String array or a variable argument (varargs) of type String.
		- If a class defines a main method that doesn’t match the signature of the main method, it’s referred to as an overloaded method
		
		Valid signatures:
		
			public static void main(String args[]) {
			}
		
			public static void main(String[] args) {
			}
		
			public static void main(String... args) {
			}
		
			static public void main(String[] args) {
			}
		
1.3 Java packages
		
		
	
	
	
	